"""Apply foreign key and user_id type fixes to user-related tables

Revision ID: 87efce0cab2b
Revises: 
Create Date: 2025-10-11 12:57:02.348958

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '87efce0cab2b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('survey_data', sa.JSON(), nullable=True),
    sa.Column('generated_profile', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_profiles_id'), 'company_profiles', ['id'], unique=False)
    op.create_index(op.f('ix_company_profiles_name'), 'company_profiles', ['name'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('vector_document_metadata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_hash', sa.String(length=64), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('file_size_bytes', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(length=50), nullable=True),
    sa.Column('embedding_model', sa.String(length=100), nullable=False),
    sa.Column('chunk_count', sa.Integer(), nullable=False),
    sa.Column('chunk_size', sa.Integer(), nullable=False),
    sa.Column('chunk_overlap', sa.Integer(), nullable=False),
    sa.Column('faiss_index_path', sa.Text(), nullable=False),
    sa.Column('vector_dimension', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('last_accessed', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vector_document_metadata_document_hash'), 'vector_document_metadata', ['document_hash'], unique=True)
    op.create_index(op.f('ix_vector_document_metadata_id'), 'vector_document_metadata', ['id'], unique=False)
    op.create_table('conversion_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('original_text', sa.Text(), nullable=False),
    sa.Column('converted_texts', sa.JSON(), nullable=False),
    sa.Column('context', sa.String(length=50), nullable=True),
    sa.Column('user_rating', sa.Integer(), nullable=True),
    sa.Column('selected_version', sa.String(length=20), nullable=True),
    sa.Column('feedback_text', sa.Text(), nullable=True),
    sa.Column('sentiment_analysis', sa.JSON(), nullable=True),
    sa.Column('prompts_used', sa.JSON(), nullable=True),
    sa.Column('model_used', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversion_history_id'), 'conversion_history', ['id'], unique=False)
    op.create_index(op.f('ix_conversion_history_user_id'), 'conversion_history', ['user_id'], unique=False)
    op.create_table('negative_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('avoid_flowery_language', sa.String(length=20), nullable=True),
    sa.Column('avoid_repetitive_words', sa.String(length=20), nullable=True),
    sa.Column('comma_usage_style', sa.String(length=20), nullable=True),
    sa.Column('content_over_format', sa.String(length=20), nullable=True),
    sa.Column('bullet_point_usage', sa.String(length=20), nullable=True),
    sa.Column('emoticon_usage', sa.String(length=20), nullable=True),
    sa.Column('custom_negative_prompts', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_negative_preferences_id'), 'negative_preferences', ['id'], unique=False)
    op.create_index(op.f('ix_negative_preferences_user_id'), 'negative_preferences', ['user_id'], unique=False)
    op.create_table('rag_query_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('query_text', sa.Text(), nullable=False),
    sa.Column('query_hash', sa.String(length=64), nullable=False),
    sa.Column('context_type', sa.String(length=50), nullable=True),
    sa.Column('retrieved_documents', sa.JSON(), nullable=True),
    sa.Column('similarity_scores', sa.JSON(), nullable=True),
    sa.Column('total_search_time_ms', sa.Integer(), nullable=True),
    sa.Column('generated_answer', sa.Text(), nullable=True),
    sa.Column('answer_quality_score', sa.Float(), nullable=True),
    sa.Column('model_used', sa.String(length=50), nullable=True),
    sa.Column('total_generation_time_ms', sa.Integer(), nullable=True),
    sa.Column('user_rating', sa.Integer(), nullable=True),
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('was_helpful', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rag_query_history_id'), 'rag_query_history', ['id'], unique=False)
    op.create_index(op.f('ix_rag_query_history_query_hash'), 'rag_query_history', ['query_hash'], unique=False)
    op.create_index(op.f('ix_rag_query_history_user_id'), 'rag_query_history', ['user_id'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('base_formality_level', sa.Integer(), nullable=True),
    sa.Column('base_friendliness_level', sa.Integer(), nullable=True),
    sa.Column('base_emotion_level', sa.Integer(), nullable=True),
    sa.Column('base_directness_level', sa.Integer(), nullable=True),
    sa.Column('session_formality_level', sa.Float(), nullable=True),
    sa.Column('session_friendliness_level', sa.Float(), nullable=True),
    sa.Column('session_emotion_level', sa.Float(), nullable=True),
    sa.Column('session_directness_level', sa.Float(), nullable=True),
    sa.Column('questionnaire_responses', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_profiles_id'), 'user_profiles', ['id'], unique=False)
    op.create_index(op.f('ix_user_profiles_user_id'), 'user_profiles', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_profiles_user_id'), table_name='user_profiles')
    op.drop_index(op.f('ix_user_profiles_id'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index(op.f('ix_rag_query_history_user_id'), table_name='rag_query_history')
    op.drop_index(op.f('ix_rag_query_history_query_hash'), table_name='rag_query_history')
    op.drop_index(op.f('ix_rag_query_history_id'), table_name='rag_query_history')
    op.drop_table('rag_query_history')
    op.drop_index(op.f('ix_negative_preferences_user_id'), table_name='negative_preferences')
    op.drop_index(op.f('ix_negative_preferences_id'), table_name='negative_preferences')
    op.drop_table('negative_preferences')
    op.drop_index(op.f('ix_conversion_history_user_id'), table_name='conversion_history')
    op.drop_index(op.f('ix_conversion_history_id'), table_name='conversion_history')
    op.drop_table('conversion_history')
    op.drop_index(op.f('ix_vector_document_metadata_id'), table_name='vector_document_metadata')
    op.drop_index(op.f('ix_vector_document_metadata_document_hash'), table_name='vector_document_metadata')
    op.drop_table('vector_document_metadata')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_company_profiles_name'), table_name='company_profiles')
    op.drop_index(op.f('ix_company_profiles_id'), table_name='company_profiles')
    op.drop_table('company_profiles')
    # ### end Alembic commands ###
