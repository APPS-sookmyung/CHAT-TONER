# Python FastAPI Backend - Cloud Build Configuration
# Trigger path: python_backend/**

steps:
  # Build Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/chattoner-back:latest"
      - "-t"
      - "gcr.io/$PROJECT_ID/chattoner-back:$COMMIT_SHA"
      - "-f"
      - "Dockerfile"
      - "."
    dir: "python_backend"
    id: "build-backend-image"

  # Push latest tag
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/chattoner-back:latest"
    id: "push-backend-latest"

  # Push commit SHA tag
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/chattoner-back:$COMMIT_SHA"
    id: "push-backend-sha"

  # Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    args:
      - "gcloud"
      - "run"
      - "deploy"
      - "chattoner-back"
      - "--image"
      - "gcr.io/$PROJECT_ID/chattoner-back:latest"
      - "--region"
      - "asia-northeast3"
      - "--platform"
      - "managed"
      - "--allow-unauthenticated"
      - "--port"
      - "8080"
      - "--memory"
      - "512Mi"
      - "--cpu"
      - "1"
      - "--timeout"
      - "180"
      - "--concurrency"
      - "80"
      - "--min-instances"
      - "0"
      - "--max-instances"
      - "3"
      - "--add-cloudsql-instances"
      - "chattoner-project:asia-northeast3:chattoner"
      - "--vpc-connector"
      - "run-to-db-connector"
      - "--vpc-egress"
      - "private-ranges-only"
      - "--update-env-vars"
      - "ENVIRONMENT=production,DB_HOST=10.118.192.2,DB_PORT=5432,DB_NAME=chattoner-db,DB_USER=chattoner-user,DB_PASS=r~o+^[uD @6+p,kby,DATABASE_URL=postgresql://chattoner-user:r~o%2B%5E%5BuD%406%2Bp%2Ckby@10.118.192.2:5432/chattoner-db"
    id: "deploy-backend-cloudrun"

# Images to be stored in Container Registry
images:
  - "gcr.io/$PROJECT_ID/chattoner-back:latest"
  - "gcr.io/$PROJECT_ID/chattoner-back:$COMMIT_SHA"

# Build timeout
timeout: "1200s"

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  pool: {}
  dynamicSubstitutions: true
